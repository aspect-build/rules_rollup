"""Declare runtime dependencies

These are needed for local dev, and users must install them as well.
See https://docs.bazel.build/versions/main/skylark/deploying.html#dependencies
"""
load("@aspect_rules_js//js:defs.bzl", "constants", "utils")
load("//rollup/private:versions.bzl", "TOOL_VERSIONS")

LATEST_VERSION = TOOL_VERSIONS.keys()[-1]

_DOC = "Fetch external tools needed for rollup toolchain"
_ATTRS = {
    "rollup_version": attr.string(),
}

def _rollup_repo_impl(repository_ctx):
    # Base BUILD file for this repository
    repository_ctx.file("BUILD.bazel", """
# Generated by aspect_rules_rollup/rollup/repositories.bzl
load("@aspect_bazel_lib//lib:directory_path.bzl", "directory_path")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@aspect_rules_rollup//rollup/private:{version}/defs.bzl", "link_js_packages")
link_js_packages()

directory_path(
    name = "rollup_entrypoint",
    directory = ":{direct_link_prefix}{bazel_name}{dir_suffix}",
    path = "dist/bin/rollup",
)

js_binary(
    name = "{name}",
    data = ["//:{direct_link_prefix}rollup"],
    entry_point = ":rollup_entrypoint",
    visibility = ["//visibility:public"],
)
""".format(
        name = repository_ctx.attr.name,
        version = repository_ctx.attr.rollup_version,
        direct_link_prefix = constants.direct_link_prefix,
        dir_suffix = constants.dir_suffix,
        bazel_name = utils.bazel_name("rollup"),
    ))

rollup_repositories = repository_rule(
    _rollup_repo_impl,
    doc = _DOC,
    attrs = _ATTRS,
)

# Wrapper macro around everything above, this is the primary API
def rollup_register_toolchains(name, rollup_version, **kwargs):
    """Convenience macro for users which does typical setup.

    Users can avoid this macro and do these steps themselves, if they want more control.
    Args:
        name: base name for all created repos, like "rollup"
        rollup_version: a version which is mirrored into rules_rollup
        **kwargs: passed to each node_repositories call
    """
    if rollup_version not in TOOL_VERSIONS.keys():
        fail("""
rollup version {} is not currently mirrored into rules_rollup.
Please instead choose one of these available versions: {}""".format(rollup_version, TOOL_VERSIONS.keys()))

    TOOL_VERSIONS[rollup_version]()

    rollup_repositories(
        name = name,
        rollup_version = rollup_version,
    )
